# Stolen completely from https://mutelight.org/practical-tmux
# C-b is not acceptable -- Vim uses it
#set-option -g prefix C-a
set -g prefix C-a
#bind-key C-a last-window

# bind 'C-a C-a' to type 'C-a'
# (via https://gist.github.com/andreyvit/2921703)
# (other good cheatsheet: https://gist.github.com/MohamedAlaa/2961058)
unbind C-b
bind C-a send-prefix

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right "#[fg=green]#H"

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
#setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
#bind-key a send-prefix

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Highlight active window
set-window-option -g window-status-current-bg red

# Via:
# https://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
# More info:
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/blob/master/README.md
#
# tmux list-keys -t vi-copy
#
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection, as in vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# For switching forward and backward through panes.
# The builtin commands (prefixed by 'prefix', of course) are:
#
# ';' switches to the last pane you were on (so repeatedly, it will hop
# between two panes).
#
# 'o' switches to next pane (ie, the pane to the right of the current
# pane if panes are horizontally arranged (which to vim is
# "vertical"...)
#
# There's no default key binding for switching to the previous pane (ie,
# the pane to the left of the current pane), so this is for that.
#
# Actually... there are default key bindings for switching panes in all
# the cardinal directions.  C-a <arrow-key> does it, and you can even
# repeat the arrow key (without repeating the 'C-a').  I think I'll try
# to use that before defining another shortcut.
#
# How I *would* do it, though, I believe is:
#
# bind-key KEY select-pane :.-
#
# The trick is finding a KEY that's ergonomic and unused (or unbinding
# one I don't use and plan to never use).  Instead of "select-pane :.-"
# it could also be "select-pane -L".  ":.-" and ":.+" mean "pane to the
# left" (and right, respectively... I *think*).

# Wed Feb  8 13:05:38 PST 2017
# Some suggestions (modified in some cases) from
# http://danielallendeutsch.com/blog/16-using-tmux-properly.html

# resizing panes
# Instead of using H J K L (since I like the default L), use the same
# keys but shifted up a row: U I O P (none of which have default
# meanings)
bind -r U resize-pane -L 5
bind -r I resize-pane -D 5
bind -r O resize-pane -U 5
bind -r P resize-pane -R 5

# make it a little easier to see the active pane
set -g pane-border-fg white
set -g pane-active-border-fg cyan
set -g pane-active-border-bg cyan
